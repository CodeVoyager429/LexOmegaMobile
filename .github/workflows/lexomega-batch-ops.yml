name: LexOmega – Batch Ops

on:
  workflow_dispatch:
    inputs:
      ops:
        description: "Comma-separated ops to run (normalize,fmt,sitemap,assetcheck,linkaudit,commit)"
        required: false
        default: "normalize,fmt,sitemap,assetcheck,linkaudit,commit"

# Let the job push changes and (if ever needed) touch workflows
permissions:
  contents: write
  pull-requests: write
  actions: read
  workflows: write

jobs:
  run-ops:
    runs-on: ubuntu-latest
    env:
      SITE: ${{ secrets.SITE_DOMAIN }}
      OPS: ${{ github.event.inputs.ops }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # No cache option here (avoids “Caching for 'none' is not supported”)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Parse inputs
        id: steps
        shell: bash
        run: |
          set -e
          # Normalize comma list into space-separated tokens
          OPS_CLEAN="$(echo "${OPS:-normalize,fmt,sitemap,assetcheck,linkaudit,commit}" | tr ',' ' ')"
          echo "ops=$OPS_CLEAN" >> "$GITHUB_OUTPUT"

      - name: Install CLI tools
        if: contains(steps.steps.outputs.ops, 'fmt') || contains(steps.steps.outputs.ops, 'sitemap') || contains(steps.steps.outputs.ops, 'linkaudit')
        shell: bash
        run: |
          set -e
          # Known-good versions
          npm i -g prettier@3.3.3 linkinator@5.0.1 sitemap-generator-cli@6.2.2

      - name: Prepare SITE value
        shell: bash
        run: |
          set -e
          if [ -z "${SITE}" ]; then
            # Fallback to GitHub Pages domain (repo owner), if secret not set
            SITE="https://${GITHUB_REPOSITORY_OWNER}.github.io"
          fi
          echo "Using SITE=${SITE}"

      - name: Normalize filenames (lowercase, no spaces)
        if: contains(steps.steps.outputs.ops, 'normalize')
        shell: bash
        run: |
          set -e
          # Only rename tracked files that actually need changes.
          # Skip anything that looks like HTML content accidentally piped in.
          git ls-files -z | while IFS= read -r -d '' f; do
            # Skip .git internals (ls-files already does), and any path with '<' or '>'
            if [[ "$f" == *'<'* || "$f" == *'>'* ]]; then
              continue
            fi
            nf="$f"
            # Replace spaces with dashes
            if [[ "$nf" == *" "* ]]; then
              nf="${nf// /-}"
            fi
            # Lowercase path (preserves slashes)
            # Use Python for robust, locale-safe lowercasing
            lf="$(python3 - <<'PY'
import sys,os
p=sys.stdin.read().strip()
print(p.lower())
PY
<<<"$nf")"
            if [ "$f" != "$lf" ]; then
              # Ensure target directory exists
              mkdir -p "$(dirname "$lf")"
              git mv -f -- "$f" "$lf"
            fi
          done

      - name: Format code (Prettier)
        if: contains(steps.steps.outputs.ops, 'fmt')
        shell: bash
        run: |
          set -e
          # Prettify common text/code assets if present
          npx --yes prettier@3.3.3 \
            "**/*.{js,ts,jsx,tsx,css,scss,md,html,json,yml,yaml}" \
            --write || true

      - name: Generate sitemap.xml (best-effort)
        if: contains(steps.steps.outputs.ops, 'sitemap')
        shell: bash
        run: |
          set -e
          # Try to generate a sitemap from SITE; do not fail the job if the host is not live yet
          npx --yes sitemap-generator-cli@6.2.2 "${SITE}" \
            --filepath sitemap.xml --max-depth 0 --strip-querystring || true
          test -f sitemap.xml && echo "sitemap.xml generated (or already present)"

      - name: Asset check (local)
        if: contains(steps.steps.outputs.ops, 'assetcheck')
        shell: bash
        run: |
          set -e
          test -f sitemap.xml && echo "✅ sitemap.xml present" || { echo "⚠️ sitemap.xml not found (continuing)"; }

      - name: Link audit (external)
        if: contains(steps.steps.outputs.ops, 'linkaudit')
        shell: bash
        run: |
          set -e
          # Crawl the public site; skip mailto/tel to keep noise down
          npx --yes linkinator@5.0.1 "${SITE}" --recurse --skip "mailto:,tel:" || true

      - name: Commit & push changes
        if: contains(steps.steps.outputs.ops, 'commit')
        shell: bash
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          set -e
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore(batch-ops): apply fmt/normalize and generated artifacts"
            # Avoid pushing workflow changes to dodge “workflows” permission block
            # (we aren't modifying .github/workflows here, but keep rule anyway)
            git push origin HEAD:${GITHUB_REF_NAME}
            echo "Pushed updates."
          else
            echo "No changes to commit."
          fi
