name: LexOmega â€“ Batch Ops

on:
  workflow_dispatch:
    inputs:
      ops:
        description: "Comma-separated ops to run (normalize,fmt,sitemap,assetcheck,linkaudit,commit)"
        required: true
        default: "normalize,fmt,sitemap,assetcheck,linkaudit,commit"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: batch-ops-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-ops:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse inputs
        id: parse
        run: |
          INPUT="${{ github.event.inputs.ops }}"
          INPUT="${INPUT// /}"        # strip spaces
          echo "ops=$INPUT" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "none"               # no lockfile in this repo

      # ---- CLI tooling (no sitemap here) ----
      - name: Install CLI tools
        run: |
          set -e
          npm i -g prettier@3.3.3 linkinator@5.0.1

      # ---- SITE (domain) from secret ----
      - name: Prepare SITE value
        id: site
        run: |
          if [ -n "${{ secrets.SITE_DOMAIN }}" ]; then
            echo "SITE=${{ secrets.SITE_DOMAIN }}" >> "$GITHUB_ENV"
          else
            echo "SITE=localhost" >> "$GITHUB_ENV"
          fi

      # ---- normalize file names ----
      - name: Normalize filenames (lowercase, no spaces)
        if: contains(steps.parse.outputs.ops, 'normalize')
        run: |
          set -e
          git ls-files -z | while IFS= read -r -d '' f; do
            lc="$(echo "$f" | tr '[:upper:]' '[:lower:]' | tr ' ' '_' )"
            [ "$f" = "$lc" ] || { git mv -f "$f" "$lc"; }
          done || true

      # ---- code format ----
      - name: Format code (Prettier)
        if: contains(steps.parse.outputs.ops, 'fmt')
        run: |
          set -e
          prettier --version
          prettier -w .

      # ---- sitemap (run via npx pinned to 7.0.5) ----
      - name: Generate sitemap.xml (best-effort)
        if: contains(steps.parse.outputs.ops, 'sitemap')
        run: |
          set -e
          URL="https://${SITE}"
          echo "Generating sitemap for $URL"
          npx --yes sitemap-generator-cli@7.0.5 -u "$URL" -o sitemap.xml || true
          test -f sitemap.xml && echo "sitemap.xml written" || echo "sitemap step skipped (no output)"

      # ---- local asset check (lightweight) ----
      - name: Asset check (local)
        if: contains(steps.parse.outputs.ops, 'assetcheck')
        run: |
          set -e
          test -f sitemap.xml && echo "sitemap present" || true

      # ---- external link audit (crawl the site URL) ----
      - name: Link audit (external)
        if: contains(steps.parse.outputs.ops, 'linkaudit')
        run: |
          set -e
          linkinator "https://${SITE}" --recurse --skip "mailto:,tel:" || true

      # ---- commit + push any changes ----
      - name: Commit & push changes
        if: contains(steps.parse.outputs.ops, 'commit')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git status --porcelain
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore(batch-ops): apply fmt/normalize and generated artifacts"
            git push origin "${GITHUB_REF_NAME:-main}"
          else
            echo "Nothing to commit."
          fi
