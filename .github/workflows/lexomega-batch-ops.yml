name: LexOmega – Batch Ops

on:
  workflow_dispatch:
    inputs:
      ops:
        description: "Comma-separated ops to run (normalize,fmt,sitemap,assetcheck,linkaudit,commit)"
        required: false
        default: "normalize,fmt,sitemap,assetcheck,linkaudit,commit"

# Let the job push changes and (if ever needed) touch workflow files.
permissions:
  contents: write
  pull-requests: write
  actions: read
  workflows: write

jobs:
  run-ops:
    runs-on: ubuntu-latest
    env:
      SITE: ${{ secrets.SITE_DOMAIN }}
      OPS: ${{ github.event.inputs.ops }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # No caching option here (avoids “Caching for 'none' is not supported” and lockfile errors)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Parse inputs
        id: steps
        shell: bash
        run: |
          set -e
          OPS_CLEAN="$(echo "${OPS:-normalize,fmt,sitemap,assetcheck,linkaudit,commit}" \
            | tr '[:upper:]' '[:lower:]' | tr -d ' ')"
          echo "ops=$OPS_CLEAN" >> "$GITHUB_OUTPUT"

      - name: Install CLI tools
        if: contains(steps.steps.outputs.ops, 'fmt') || contains(steps.steps.outputs.ops, 'linkaudit') || contains(steps.steps.outputs.ops, 'sitemap')
        shell: bash
        run: |
          set -e
          npm i -g prettier@3.3.3 linkinator@5.0.1 sitemap-generator-cli@6.2.2

      - name: Prepare SITE value
        shell: bash
        run: |
          set -e
          if [ -z "${SITE}" ]; then
            SITE="https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY##*/}"
          fi
          echo "Using SITE=${SITE}"

      - name: Normalize filenames (lowercase, no spaces)
        if: contains(steps.steps.outputs.ops, 'normalize')
        shell: bash
        run: |
          set -e
          shopt -s globstar nullglob
          mapfile -t FILES < <(git ls-files)
          for f in "${FILES[@]}"; do
            base="$(basename "$f")"
            dir="$(dirname "$f")"
            newbase="$(echo "$base" | tr '[:upper:]' '[:lower:]' | sed -E 's/[[:space:]]+/-/g')"
            if [[ "$base" != "$newbase" ]]; then
              if [ -e "$dir/$newbase" ]; then
                echo "Skip rename (target exists): $dir/$newbase"
              else
                git mv -f "$f" "$dir/$newbase"
              fi
            fi
          done

      - name: Format code (Prettier)
        if: contains(steps.steps.outputs.ops, 'fmt')
        shell: bash
        run: |
          set -e
          prettier -w "**/*.{html,css,js,json,md,yml,yaml}"

      - name: Generate sitemap.xml (best-effort)
        if: contains(steps.steps.outputs.ops, 'sitemap')
        shell: bash
        continue-on-error: true
        run: |
          set -e
          sitemap-generator --strip-querystring "${SITE}" --max-depth 2 --output ./sitemap.xml

      - name: Asset check (local)
        if: contains(steps.steps.outputs.ops, 'assetcheck')
        shell: bash
        run: |
          set -e
          if [ -f sitemap.xml ]; then
            echo "sitemap.xml present"
          else
            echo "sitemap.xml missing (continuing)"
          fi

      - name: Link audit (external)
        if: contains(steps.steps.outputs.ops, 'linkaudit')
        shell: bash
        run: |
          set -e
          linkinator "${SITE}" --recurse --skip "mailto:,tel:" --timeout 120000

      - name: Commit & push changes
        if: contains(steps.steps.outputs.ops, 'commit')
        shell: bash
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          set -e
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          if ! git diff --quiet || ! git diff --cached --quiet; then
            git add -A
            git commit -m "chore(batch-ops): apply fmt/normalize and generated artifacts"
            git push
          else
            echo "No changes to commit."
          fi
