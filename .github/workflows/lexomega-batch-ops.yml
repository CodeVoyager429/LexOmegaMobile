name: LexOmega â€“ Batch Ops

on:
  workflow_dispatch:
    inputs:
      ops:
        description: "Comma-separated ops to run (normalize,fmt,sitemap,assetcheck,linkaudit,commit)"
        required: false
        default: "normalize,fmt,sitemap,assetcheck,linkaudit,commit"

permissions:
  contents: write
  pull-requests: write

jobs:
  run-ops:
    runs-on: ubuntu-latest
    env:
      SITE_DOMAIN: ${{ secrets.SITE_DOMAIN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Parse inputs
        id: parse
        run: |
          OPS="${{ github.event.inputs.ops }}"
          if [ -z "$OPS" ]; then OPS="normalize,fmt,sitemap,assetcheck,linkaudit,commit"; fi
          OPS=$(echo "$OPS" | tr '[:upper:]' '[:lower:]' | sed 's/[[:space:]]//g')
          echo "ops=$OPS" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install CLI tools
        run: npm i -g prettier@3.3.3 linkinator@5.0.1 sitemap-generator-cli@7.4.2

      - name: Prepare SITE value
        if: contains(steps.parse.outputs.ops, 'sitemap') || contains(steps.parse.outputs.ops, 'linkaudit')
        run: |
          if [ -z "${SITE_DOMAIN}" ]; then
            echo "SITE_DOMAIN secret not set"; exit 1
          fi
          echo "SITE=https://${SITE_DOMAIN}" >> "$GITHUB_ENV"

      - name: Normalize filenames (lowercase, no spaces)
        if: contains(steps.parse.outputs.ops, 'normalize')
        run: |
          git ls-files -z | xargs -0 -I{} bash -c '
            f="{}"
            case "$f" in
              .git/*|.github/*|node_modules/*|*.png|*.jpg|*.jpeg|*.gif|*.webp) exit 0;;
            esac
            nf=$(echo "$f" | sed -E "s/ /-/g" | tr "[:upper:]" "[:lower:]")
            if [ "$f" != "$nf" ]; then
              mkdir -p "$(dirname "$nf")"
              git mv -f "$f" "$nf"
            fi
          '

      - name: Format code (Prettier)
        if: contains(steps.parse.outputs.ops, 'fmt')
        run: |
          prettier --ignore-unknown --write "**/*.{js,jsx,ts,tsx,css,html,json,md,yml,yaml}" "!**/.github/**" || true

      - name: Generate sitemap.xml (best-effort)
        if: contains(steps.parse.outputs.ops, 'sitemap')
        run: |
          npx --yes sitemap-generator-cli "$SITE" --max-depth 2 --changefreq weekly \
            --priority-map '{"^/":1}' -o sitemap.xml || true

      - name: Asset check (local)
        if: contains(steps.parse.outputs.ops, 'assetcheck')
        run: test -f sitemap.xml && echo "sitemap.xml present" || echo "sitemap.xml missing (ok)"

      - name: Link audit (external)
        if: contains(steps.parse.outputs.ops, 'linkaudit')
        run: |
          linkinator "$SITE" --recurse --skip "mailto:,tel:" || true

      - name: Commit & push changes
        if: contains(steps.parse.outputs.ops, 'commit')
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
        run: |
          set -e
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"

          # Stage everything, then explicitly unstage workflows (cannot be pushed by GITHUB_TOKEN)
          git add -A
          git restore --staged .github/workflows || true

          # Nothing to commit? exit cleanly
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "chore(batch-ops): apply fmt/normalize and generated artifacts [skip ci]"
          git push origin "${GITHUB_REF_NAME:-main}"
