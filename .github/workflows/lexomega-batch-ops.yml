name: LexOmega â€“ Batch Ops

on:
  workflow_dispatch:
    inputs:
      ops:
        description: "comma-separated ops to run (normalize,fmt,sitemap,assetcheck,linkaudit,commit)"
        required: true
        default: "normalize,fmt,sitemap,assetcheck,linkaudit,commit"

env:
  NODE_VERSION: "20.x"
  SITE_DOMAIN: ${{ secrets.SITE_DOMAIN }}

jobs:
  run-ops:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Do NOT enable caching because the runner will demand a lockfile we don't use
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "none"

      - name: Parse inputs
        id: parse
        run: |
          OPS="${{ github.event.inputs.ops }}"
          OPS="${OPS// /}"   # strip spaces
          echo "ops=$OPS" >> "$GITHUB_OUTPUT"

      - name: Install CLI tools
        run: |
          set -e
          npm i -g prettier@3.3.3 linkinator@5.0.1 sitemap-generator-cli@7.4.2

      - name: Prepare SITE value
        id: site
        run: |
          if [ -n "${SITE_DOMAIN:-}" ]; then
            SITE="https://${SITE_DOMAIN}"
          else
            # fallback to GH Pages style URL
            OWNER_REPO="${GITHUB_REPOSITORY,,}"
            OWNER="${OWNER_REPO%/*}"
            REPO="${OWNER_REPO#*/}"
            SITE="https://${OWNER}.github.io/${REPO}/"
          fi
          echo "SITE=$SITE" >> "$GITHUB_ENV"
          echo "Using SITE=$SITE"

      - name: Normalize filenames (lowercase, no spaces)
        if: contains(steps.parse.outputs.ops, 'normalize')
        run: |
          set -e
          find . -path ./.git -prune -o -type f -print0 | while IFS= read -r -d '' f; do
            dir=$(dirname "$f"); base=$(basename "$f")
            lower=$(echo "$base" | tr '[:upper:] ' '[:lower:]-')
            if [ "$base" != "$lower" ]; then
              git mv -f "$f" "$dir/$lower"
            fi
          done

      - name: Format code (Prettier)
        if: contains(steps.parse.outputs.ops, 'fmt')
        run: |
          set -e
          prettier -w .

      - name: Generate sitemap.xml (best-effort)
        if: contains(steps.parse.outputs.ops, 'sitemap')
        run: |
          set -e
          # Try generating from the public site; ignore failures so the workflow can continue
          npx --yes sitemap-generator-cli@7.4.2 "$SITE" --strip-querystring --filepath ./sitemap.xml || true
          test -f sitemap.xml && echo "sitemap.xml present" || echo "sitemap.xml not created (continuing)"

      - name: Asset check (local)
        if: contains(steps.parse.outputs.ops, 'assetcheck')
        run: |
          set -e
          # Keep this lightweight; it's mainly a smoke test step
          test -f sitemap.xml && echo "sitemap.xml ok" || echo "no sitemap.xml (allowed)"

      - name: Link audit (external)
        if: contains(steps.parse.outputs.ops, 'linkaudit')
        run: |
          set -e
          linkinator "$SITE" --recurse --skip "mailto:,tel:"

      - name: Commit & push changes
        if: contains(steps.parse.outputs.ops, 'commit')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(batch-ops): apply fmt/normalize and generated artifacts [skip ci]"
          git push
