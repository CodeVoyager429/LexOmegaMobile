name: LexOmega – Batch Ops

on:
  workflow_dispatch:
    inputs:
      ops:
        description: "Comma-separated ops to run (normalize,fmt,sitemap,assetcheck,linkaudit,commit)"
        required: true
        default: "normalize,fmt,sitemap,assetcheck,linkaudit,commit"

# Make sure the token can push back to the repo
permissions:
  contents: write
  pull-requests: write

jobs:
  run-ops:
    runs-on: ubuntu-latest

    steps:
      - name: Set up job
        run: echo "Starting batch ops…"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse inputs
        id: parse
        run: |
          OPS="${{ github.event.inputs.ops }}"
          echo "ops=${OPS}" >> "$GITHUB_OUTPUT"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          # Intentionally no 'cache' because this repo has no lockfile

      - name: Install CLI tools
        run: |
          set -e
          npm i -g prettier@3.3.3 linkinator@5.0.1 sitemap-generator-cli@7.7.0

      - name: Prepare SITE value
        run: |
          # Accept either domain-only or full URL in the secret
          RAW="${{ secrets.SITE_DOMAIN }}"
          if [[ "$RAW" =~ ^https?:// ]]; then
            SITE="$RAW"
          else
            SITE="https://$RAW"
          fi
          echo "SITE=$SITE" >> "$GITHUB_ENV"

      - name: Normalize filenames (lowercase, no spaces)
        if: contains(steps.parse.outputs.ops, 'normalize')
        run: |
          find . -type f -not -path "./.git/*" | while read -r f; do
            dir="$(dirname "$f")"
            base="$(basename "$f")"
            lower="$(echo "$base" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')"
            if [ "$base" != "$lower" ]; then
              git mv -f "$f" "$dir/$lower" || true
            fi
          done

      - name: Format code (Prettier)
        if: contains(steps.parse.outputs.ops, 'fmt')
        run: |
          prettier -w . || true

      - name: Generate sitemap.xml (best-effort)
        if: contains(steps.parse.outputs.ops, 'sitemap')
        env:
          SITE: ${{ env.SITE }}
        run: |
          if [ -n "$SITE" ]; then
            # v7 requires explicit -o for output file
            sitemap-generator "$SITE" -o sitemap.xml || true
          else
            echo "SITE not set; skipping sitemap generation"
          fi

      - name: Asset check (local)
        if: contains(steps.parse.outputs.ops, 'assetcheck')
        run: |
          test -f sitemap.xml && echo "sitemap.xml present" || echo "sitemap.xml not present (ok)"

      - name: Link audit (external)
        if: contains(steps.parse.outputs.ops, 'linkaudit')
        env:
          SITE: ${{ env.SITE }}
        run: |
          if [ -n "$SITE" ]; then
            # Crawl the actual site, skip mailto/tel; do not fail the job on link issues
            linkinator "$SITE" --recurse --skip "mailto:,tel:" || true
          else
            echo "SITE not set; skipping link audit"
          fi

      - name: Commit & push changes
        if: contains(steps.parse.outputs.ops, 'commit')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage anything that changed (prettier/normalize/sitemap)
          git add -A

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "chore(batch-ops): apply fmt/normalize and generated artifacts"
          git push origin "${GITHUB_REF_NAME:-main}"
