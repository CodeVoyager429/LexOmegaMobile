name: LexOmega – Batch Ops

on:
  workflow_dispatch:
    inputs:
      ops:
        description: "Comma-separated ops to run (normalize,fmt,sitemap,assetcheck,linkaudit,commit)"
        required: false
        default: "normalize,fmt,sitemap,assetcheck,linkaudit,commit"

# Only what we need; DO NOT include a 'workflows:' permission (it caused the parser error).
permissions:
  contents: write
  pull-requests: write

jobs:
  run-ops:
    runs-on: ubuntu-latest

    env:
      # From Settings → Secrets and variables → Actions
      SITE: ${{ secrets.SITE_DOMAIN }}
      OPS: ${{ github.event.inputs.ops }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # No caching to avoid: "Caching for 'none' is not supported"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ''

      - name: Parse inputs
        id: flags
        shell: bash
        run: |
          set -euo pipefail
          OPS_CLEAN="$(echo "${OPS:-normalize,fmt,sitemap,assetcheck,linkaudit,commit}" | tr '[:upper:]' '[:lower:]' | tr -d ' ')"
          echo "ops=${OPS_CLEAN}" >> "$GITHUB_OUTPUT"

      - name: Install CLI tools
        if: contains(steps.flags.outputs.ops, 'fmt') || contains(steps.flags.outputs.ops, 'sitemap') || contains(steps.flags.outputs.ops, 'linkaudit')
        shell: bash
        run: |
          set -e
          npm i -g prettier@3.3.3 linkinator@6.1.2 sitemap-generator-cli@7.2.2

      - name: Prepare SITE value
        if: contains(steps.flags.outputs.ops, 'sitemap')
        shell: bash
        run: |
          set -e
          if [ -z "${SITE:-}" ]; then
            SITE="https://${GITHUB_REPOSITORY_OWNER}.github.io"
          fi
          echo "Using SITE=${SITE}"
          echo "SITE=${SITE}" >> "$GITHUB_ENV"

      - name: Normalize filenames (lowercase, no spaces)
        if: contains(steps.flags.outputs.ops, 'normalize')
        shell: bash
        run: |
          set -e
          git ls-files -z \
            | grep -zvE '^\.github/workflows/' \
            | while IFS= read -r -d '' f; do
                base="$(basename "$f")"
                dir="$(dirname "$f")"
                new="$(echo "$base" | tr '[:upper:]' '[:lower:]' | tr ' ' '-' )"
                if [ "$base" != "$new" ]; then
                  mkdir -p "$dir"
                  git mv -f "$f" "$dir/$new"
                fi
              done

      - name: Format code (Prettier)
        if: contains(steps.flags.outputs.ops, 'fmt')
        shell: bash
        run: |
          set -e
          npx --yes prettier@3.3.3 --write "**/*.{js,jsx,ts,tsx,css,html,md,json,yml,yaml}" || true
          git status --porcelain

      - name: Generate sitemap.xml (best-effort)
        if: contains(steps.flags.outputs.ops, 'sitemap')
        shell: bash
        run: |
          set -e
          npx --yes sitemap-generator-cli@7.2.2 "${SITE}" --output ./sitemap.xml || echo "sitemap generation skipped"
          git add sitemap.xml || true

      - name: Asset check (local)
        if: contains(steps.flags.outputs.ops, 'assetcheck')
        shell: bash
        run: |
          set -e
          test -f index.html || echo "note: index.html not present"

      - name: Link audit (external)
        if: contains(steps.flags.outputs.ops, 'linkaudit')
        shell: bash
        run: |
          set -e
          npx --yes linkinator@6.1.2 "https://${GITHUB_REPOSITORY_OWNER}.github.io" --recurse --skip "mailto:,tel:" || true

      - name: Commit & push changes
        if: contains(steps.flags.outputs.ops, 'commit')
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          # Guard: never stage workflow files (avoids GitHub's 'refusing to allow a GitHub App to create/update workflow' error)
          git reset -- .github/workflows || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(batch-ops): apply fmt/normalize and generated artifacts [skip ci]"
          git push origin HEAD:${GITHUB_REF_NAME}
