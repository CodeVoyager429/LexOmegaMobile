<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>LexOmega Chat Assistant</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #0f172a;
      color: #e2e8f0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .message {
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 8px;
    }
    .user {
      background-color: #2563eb;
      color: white;
      text-align: right;
    }
    .bot {
      background-color: #334155;
      color: #ffffff;
      text-align: left;
    }
  </style>
</head>
<body class="p-6">

  <h1 class="text-3xl font-bold mb-6">üí¨ LexOmega Chat Assistant</h1>

  <div id="chat-box" class="mb-4 max-h-[70vh] overflow-y-auto"></div>

  <div class="flex">
    <input id="user-input" type="text" placeholder="Ask a legal question..." class="flex-grow p-2 rounded bg-white text-black"/>
    <button onclick="sendMessage()" class="ml-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded">Send</button>
  </div>

  <script>
    const chatBox = document.getElementById('chat-box');
    const userInput = document.getElementById('user-input');

    async function sendMessage() {
      const input = userInput.value.trim();
      if (!input) return;

      addMessage(input, 'user');
      userInput.value = '';

      const reply = await getGPTReply(input);
      addMessage(reply, 'bot');
    }

    function addMessage(text, sender) {
      const msg = document.createElement('div');
      msg.className = `message ${sender}`;
      msg.textContent = text;
      chatBox.appendChild(msg);
      chatBox.scrollTop = chatBox.scrollHeight;
    }

    async function getGPTReply(prompt) {
      try {
        const response = await fetch("https://api.openai.com/v1/chat/completions", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "Authorization": "Bearer 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"
          },
          body: JSON.stringify({
            model: "gpt-4",
            messages: [{ role: "user", content: prompt }]
          })
        });

        const data = await response.json();
        return data.choices[0].message.content.trim();
      } catch (error) {
        return "‚ö†Ô∏è Sorry, I couldn‚Äôt connect to the AI. Please try again later.";
      }
    }
  </script>
</body>
</html>
